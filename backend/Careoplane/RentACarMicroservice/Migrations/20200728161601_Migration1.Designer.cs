// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RentACarMicroservice.Database;

namespace RentACarMicroservice.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20200728161601_Migration1")]
    partial class Migration1
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Common.Models.Discount", b =>
                {
                    b.Property<int>("DiscountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("DiscountValue")
                        .HasColumnType("float");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("DiscountId");

                    b.ToTable("Discount");
                });

            modelBuilder.Entity("Common.Models.Location", b =>
                {
                    b.Property<int>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("LocationValue")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RentACarName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("LocationId");

                    b.HasIndex("RentACarName");

                    b.ToTable("Location");
                });

            modelBuilder.Entity("Common.Models.PriceList", b =>
                {
                    b.Property<int>("PriceId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PriceService")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("PriceValue")
                        .HasColumnType("float");

                    b.Property<string>("RentACarName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("PriceId");

                    b.HasIndex("RentACarName");

                    b.ToTable("PriceList");
                });

            modelBuilder.Entity("Common.Models.RentACar", b =>
                {
                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.HasKey("Name");

                    b.ToTable("RentACars");
                });

            modelBuilder.Entity("Common.Models.RentACarRating", b =>
                {
                    b.Property<int>("RentACarRatingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("RentACarName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("RentACarRatingValue")
                        .HasColumnType("int");

                    b.HasKey("RentACarRatingId");

                    b.HasIndex("RentACarName");

                    b.ToTable("RentACarRating");
                });

            modelBuilder.Entity("Common.Models.UnavailableDate", b =>
                {
                    b.Property<int>("DateId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("DateId");

                    b.HasIndex("VehicleId");

                    b.ToTable("UnavailableDate");
                });

            modelBuilder.Entity("Common.Models.Vehicle", b =>
                {
                    b.Property<int>("VehicleId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsOnSale")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumOfSeats")
                        .HasColumnType("int");

                    b.Property<double>("PricePerDay")
                        .HasColumnType("float");

                    b.Property<double>("Rating")
                        .HasColumnType("float");

                    b.Property<string>("RentACarName")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Version")
                        .HasColumnType("int");

                    b.Property<int>("Year")
                        .HasColumnType("int");

                    b.HasKey("VehicleId");

                    b.HasIndex("RentACarName");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("Common.Models.VehicleRating", b =>
                {
                    b.Property<int>("VehicleRatingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.Property<int>("VehicleRatingValue")
                        .HasColumnType("int");

                    b.HasKey("VehicleRatingId");

                    b.HasIndex("VehicleId");

                    b.ToTable("VehicleRating");
                });

            modelBuilder.Entity("Common.Models.VehicleReservation", b =>
                {
                    b.Property<int>("ReservationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FromDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("FromLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsRentACarRated")
                        .HasColumnType("bit");

                    b.Property<bool>("IsVehicleRated")
                        .HasColumnType("bit");

                    b.Property<int>("NumOfDays")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<DateTime>("ToDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ToLocation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("ReservationId");

                    b.ToTable("VehicleReservation");
                });

            modelBuilder.Entity("Common.Models.Location", b =>
                {
                    b.HasOne("Common.Models.RentACar", "RentACar")
                        .WithMany("Locations")
                        .HasForeignKey("RentACarName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Common.Models.PriceList", b =>
                {
                    b.HasOne("Common.Models.RentACar", "RentACar")
                        .WithMany("Prices")
                        .HasForeignKey("RentACarName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Common.Models.RentACarRating", b =>
                {
                    b.HasOne("Common.Models.RentACar", "RentACar")
                        .WithMany("Ratings")
                        .HasForeignKey("RentACarName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Common.Models.UnavailableDate", b =>
                {
                    b.HasOne("Common.Models.Vehicle", "Vehicle")
                        .WithMany("UnavailableDates")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Common.Models.Vehicle", b =>
                {
                    b.HasOne("Common.Models.RentACar", "RentACar")
                        .WithMany("Vehicles")
                        .HasForeignKey("RentACarName")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Common.Models.VehicleRating", b =>
                {
                    b.HasOne("Common.Models.Vehicle", "Vehicle")
                        .WithMany("Ratings")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
